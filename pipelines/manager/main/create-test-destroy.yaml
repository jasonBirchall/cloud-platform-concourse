slack-notification-defaults: &SLACK_NOTIFICATION_DEFAULTS
  channel: '#lower-priority-alarms'
slack-attachments-defaults: &SLACK_ATTACHMENTS_DEFAULTS
  fallback: 'Finished building $BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME'
  title: '$BUILD_TEAM_NAME/$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME#$BUILD_NAME'
  title_link: 'https://concourse.cloud-platform.service.justice.gov.uk/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME'
  footer: concourse.cloud-platform.service.justice.gov.uk

resources:
- name: cloud-platform-infrastructure-repo
  type: git
  source:
    uri: https://github.com/ministryofjustice/cloud-platform-infrastructure.git
    branch: master
    git_crypt_key: ((cloud-platform-infrastructure-git-crypt.key))
- name: tools-image
  type: docker-image
  source:
    repository: ministryofjustice/cloud-platform-tools
    tag: 1.15
- name: slack-alert
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/((slack-hook-id))

- name: after-midnight
  type: time
  source:
    start: 1:00 AM
    stop: 3:00 AM
    location: Europe/London

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

jobs:
  - name: create-test-destroy
    serial: true
    plan:
      - in_parallel:
        - get: after-midnight
          trigger: true
        - get: cloud-platform-infrastructure-repo
          trigger: false
        - get: tools-image
          trigger: false
      - task: create-cluster-run-integration
        image: tools-image
        config:
          platform: linux
          params:
            AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
            AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
            AWS_REGION: eu-west-2
            AWS_PROFILE: moj-cp
            AUTH0_DOMAIN: "justice-cloud-platform.eu.auth0.com"
            AUTH0_CLIENT_ID: ((concourse-tf-auth0-credentials.client-id))
            AUTH0_CLIENT_SECRET: ((concourse-tf-auth0-credentials.client_secret))
            KOPS_STATE_STORE: s3://cloud-platform-kops-state
          inputs:
          - name: cloud-platform-infrastructure-repo
            path: ./
          outputs: 
          - name: env-var-files
          run:
            path: /bin/sh
            args:
              - -c
              - |
                mkdir ${HOME}/.aws
                echo "[moj-cp]" >> ${HOME}/.aws/credentials # Cheating create-cluster.rb script, it forces you to have profiles :-( 
                export CLUSTER_NAME=xx-$(date +%d%m-%H%M)
                echo "Executing: ./create-cluster.rb --no-gitcrypt -n $CLUSTER_NAME -v $CLUSTER_NAME -t 900"
                ./create-cluster.rb --no-gitcrypt -n $CLUSTER_NAME -v $CLUSTER_NAME -t 900

                #  env-var-files/clustername file, will pass on the cluster name info to the next task destroy-cluster
                echo CLUSTER_NAME=$CLUSTER_NAME > env-var-files/clustername
        on_success: 
          do:
          - task: destroy-cluster
            image: tools-image
            config:
              platform: linux
              params:
                AWS_ACCESS_KEY_ID: ((aws-creds.access-key-id))
                AWS_SECRET_ACCESS_KEY: ((aws-creds.secret-access-key))
                AWS_REGION: eu-west-2
                AWS_PROFILE: moj-cp
                AUTH0_DOMAIN: "justice-cloud-platform.eu.auth0.com"
                AUTH0_CLIENT_ID: ((concourse-tf-auth0-credentials.client-id))
                AUTH0_CLIENT_SECRET: ((concourse-tf-auth0-credentials.client_secret))
                KOPS_STATE_STORE: s3://cloud-platform-kops-state
              inputs:
              - name: cloud-platform-infrastructure-repo
                path: ./
              - name: env-var-files
              run:
                path: /bin/sh
                args:
                  - -c
                  - |
                    export $(cat env-var-files/clustername)
                    mkdir ${HOME}/.aws
                    echo "[moj-cp]" >> ${HOME}/.aws/credentials # Cheating create-cluster.rb script, it forces you to have profiles :-( 
                    echo "Executing: ./destroy-cluster.rb -n $CLUSTER_NAME"
                    ./destroy-cluster.rb --name $CLUSTER_NAME 
            on_failure:
              do:
              - put: slack-alert
                params:
                  <<: *SLACK_NOTIFICATION_DEFAULTS
                  attachments:
                    - color: "danger"
                      <<: *SLACK_ATTACHMENTS_DEFAULTS            
        on_failure:
          put: slack-alert
          params:
            <<: *SLACK_NOTIFICATION_DEFAULTS
            attachments:
              - color: "danger"
                <<: *SLACK_ATTACHMENTS_DEFAULTS
    
